"use strict";var e=Object.defineProperty,t=(t,a,r)=>(((t,a,r)=>{a in t?e(t,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[a]=r})(t,"symbol"!=typeof a?a+"":a,r),r);const a=require("../common/vendor.js"),r=require("../config/config.js"),s=e=>new Promise(((t,s)=>{const I=(e=>{e.header={"Content-Type":"application/json",...e.header};const t=a.index.getStorageSync("wechat_token");return t&&(e.header.Authorization=`Bearer ${t}`),r.CONFIG_UTILS.isDebug()&&console.log("API Request:",e),e})(e);a.index.request({...I,success:e=>{try{const a=(e=>{if(r.CONFIG_UTILS.isDebug()&&console.log("API Response:",e),200!==e.statusCode){const t=new Error(`HTTP ${e.statusCode}: ${e.errMsg}`);throw t.statusCode=e.statusCode,t}const{code:t,message:a,data:s}=e.data;if(200!==t&&201!==t){const e=new Error(a||"请求失败");throw e.code=t,e.data=s,e}return s})(e);t(a)}catch(a){s(a)}},fail:e=>{r.CONFIG_UTILS.isDebug()&&console.error("API Request Failed:",e),s(e)}})}));class I{}t(I,"index",{info:async e=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.INDEX.INFO),method:"POST",data:e})}),t(I,"user",{getInfo:async()=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.USER.INFO),method:"GET"}),list:async(e={})=>s({url:r.CONFIG_UTILS.getApiUrl("/user/list"),method:"GET",data:e}),create:async e=>s({url:r.CONFIG_UTILS.getApiUrl("/user/create"),method:"POST",data:e}),update:async e=>s({url:r.CONFIG_UTILS.getApiUrl("/user/update"),method:"POST",data:e}),delete:async e=>s({url:r.CONFIG_UTILS.getApiUrl("/user/delete"),method:"POST",data:{id:e}}),getTechnologies:async()=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.USER.TECHNOLOGIES),method:"GET"}),getMapData:async()=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.USER.MAP_DATA),method:"GET"}),getMapJson:async()=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.USER.MAP_JSON),method:"GET"}),uploadAvatar:async e=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.USER.AVATAR_UPLOAD),method:"POST",header:{"Content-Type":"multipart/form-data"},data:e})}),t(I,"project",{getList:async(e={})=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.PROJECT.LIST),method:"GET",data:e}),getDetail:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`${r.API_CONFIG.PROJECT.DETAIL}/${e}`),method:"GET"}),getCategories:async()=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.PROJECT.CATEGORIES),method:"GET"}),getFeatured:async()=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.PROJECT.FEATURED),method:"GET"}),create:async e=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.PROJECT.CREATE),method:"POST",data:e}),update:async(e,t)=>s({url:r.CONFIG_UTILS.getApiUrl(`${r.API_CONFIG.PROJECT.UPDATE}/${e}`),method:"POST",data:t}),delete:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`${r.API_CONFIG.PROJECT.DELETE}/${e}`),method:"DELETE"}),updateStatus:async(e,t)=>s({url:r.CONFIG_UTILS.getApiUrl(`${r.API_CONFIG.PROJECT.STATUS}/${e}`),method:"POST",data:{status:t}})}),t(I,"contact",{getInfo:async()=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.CONTACT.INFO),method:"GET"}),update:async e=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.CONTACT.UPDATE),method:"POST",data:e}),getMessages:async(e={})=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.CONTACT.MESSAGES),method:"GET",data:e}),submitMessage:async e=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.CONTACT.MESSAGE),method:"POST",data:e}),markAsRead:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`${r.API_CONFIG.CONTACT.READ}/${e}`),method:"POST"}),deleteMessage:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`${r.API_CONFIG.CONTACT.DELETE_MESSAGE}/${e}`),method:"DELETE"}),getStats:async()=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.CONTACT.STATS),method:"GET"}),batchMarkAsRead:async e=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.CONTACT.BATCH_READ),method:"POST",data:{ids:e}}),batchDelete:async e=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.CONTACT.BATCH_DELETE),method:"POST",data:{ids:e}})}),t(I,"admin",{getDashboard:async()=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.ADMIN.DASHBOARD),method:"GET"}),getStats:async()=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.ADMIN.STATS),method:"GET"}),getVisitTrend:async(e=7)=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.ADMIN.VISIT_TREND),method:"GET",data:{days:e}}),getPopularPages:async()=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.ADMIN.POPULAR_PAGES),method:"GET"}),getSystemInfo:async()=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.ADMIN.SYSTEM_INFO),method:"GET"})}),t(I,"visit",{log:async e=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.VISIT.LOG),method:"POST",data:e}),getStats:async(e="today")=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.VISIT.STATS),method:"GET",data:{type:e}}),getTrend:async(e=7)=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.VISIT.TREND),method:"GET",data:{days:e}}),getRealtime:async()=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.VISIT.REALTIME),method:"GET"}),getGeo:async()=>s({url:r.CONFIG_UTILS.getApiUrl(r.API_CONFIG.VISIT.GEO),method:"GET"})}),t(I,"setting",{getSettings:async(e="")=>s({url:r.CONFIG_UTILS.getApiUrl("/setting/list"),method:"GET",data:{group:e}}),updateSettings:async e=>s({url:r.CONFIG_UTILS.getApiUrl("/setting/update"),method:"POST",data:{settings:e}}),getSystemInfo:async()=>s({url:r.CONFIG_UTILS.getApiUrl("/setting/system-info"),method:"GET"}),backupData:async()=>s({url:r.CONFIG_UTILS.getApiUrl("/setting/backup"),method:"POST"}),restoreData:async e=>s({url:r.CONFIG_UTILS.getApiUrl("/setting/restore"),method:"POST",data:{backup_file:e}}),clearCache:async()=>s({url:r.CONFIG_UTILS.getApiUrl("/setting/clear-cache"),method:"POST"}),getBackupList:async()=>s({url:r.CONFIG_UTILS.getApiUrl("/setting/backup-list"),method:"GET"}),deleteBackup:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`/setting/backup/${e}`),method:"DELETE"})});const l={handle(e){console.error("API Error:",e);let t="网络请求失败";if(e.code)switch(e.code){case 400:t=e.message||"请求参数错误";break;case 401:t="未授权，请重新登录",a.index.removeStorageSync("admin_token"),a.index.removeStorageSync("wechat_token"),a.index.removeStorageSync("userInfo"),a.index.getStorageSync("admin_token")&&a.index.redirectTo({url:"/pages/admin/login"});break;case 404:t="请求的资源不存在";break;case 500:t="服务器内部错误";break;default:t=e.message||"未知错误"}else e.statusCode&&(t=`HTTP ${e.statusCode}: ${e.message}`);return a.index.showToast({title:t,icon:"none",duration:3e3}),Promise.reject(e)},handleSilent:e=>(console.error("API Error (Silent):",e),Promise.reject(e))};I.category={getList:async(e={})=>s({url:r.CONFIG_UTILS.getApiUrl("/category/list"),method:"GET",data:e}),getAll:async()=>s({url:r.CONFIG_UTILS.getApiUrl("/category/all"),method:"GET"}),getDetail:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`/category/detail/${e}`),method:"GET"}),create:async e=>s({url:r.CONFIG_UTILS.getApiUrl("/category/create"),method:"POST",data:e}),update:async(e,t)=>s({url:r.CONFIG_UTILS.getApiUrl(`/category/update/${e}`),method:"POST",data:t}),delete:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`/category/delete/${e}`),method:"DELETE"}),updateStatus:async(e,t)=>s({url:r.CONFIG_UTILS.getApiUrl(`/category/status/${e}`),method:"POST",data:{status:t}})},I.wechat={login:async e=>s({url:r.CONFIG_UTILS.getApiUrl("/wechat/login"),method:"POST",data:{code:e}}),completeUserInfo:async e=>s({url:r.CONFIG_UTILS.getApiUrl("/wechat/complete-info"),method:"POST",data:e}),verifyToken:async()=>s({url:r.CONFIG_UTILS.getApiUrl("/wechat/verify-token"),method:"GET"})},I.technology={getList:async(e={})=>s({url:r.CONFIG_UTILS.getApiUrl("/technology/list"),method:"GET",data:e}),getDetail:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`/technology/detail/${e}`),method:"GET"}),create:async e=>s({url:r.CONFIG_UTILS.getApiUrl("/technology/create"),method:"POST",data:e}),update:async(e,t)=>s({url:r.CONFIG_UTILS.getApiUrl(`/technology/update/${e}`),method:"POST",data:t}),delete:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`/technology/delete/${e}`),method:"DELETE"}),updateStatus:async(e,t)=>s({url:r.CONFIG_UTILS.getApiUrl(`/technology/status/${e}`),method:"POST",data:{status:t}}),uploadImage:async e=>new Promise(((t,s)=>{a.index.uploadFile({url:r.CONFIG_UTILS.getApiUrl("/technology/upload-image"),filePath:e,name:"image",header:{Authorization:"Bearer "+a.index.getStorageSync("wechat_token")},success:e=>{try{const a=JSON.parse(e.data);200===a.code?t(a.data):s(new Error(a.message||"上传失败"))}catch(a){s(new Error("响应解析失败"))}},fail:e=>{s(new Error("上传失败: "+e.errMsg))}})}))},I.progress={getRequirements:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`/progress/requirements/${e}`),method:"GET"}),getRequirementDetail:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`/progress/requirement/${e}`),method:"GET"}),createRequirement:async e=>s({url:r.CONFIG_UTILS.getApiUrl("/progress/requirement"),method:"POST",data:e}),updateRequirement:async(e,t)=>s({url:r.CONFIG_UTILS.getApiUrl(`/progress/requirement/${e}`),method:"PUT",data:t}),deleteRequirement:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`/progress/requirement/${e}`),method:"DELETE"}),getRequirementStats:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`/progress/stats/${e}`),method:"GET"}),getTemplates:async()=>s({url:r.CONFIG_UTILS.getApiUrl("/progress/templates"),method:"GET"}),createTemplate:async e=>s({url:r.CONFIG_UTILS.getApiUrl("/progress/template"),method:"POST",data:e}),getEngineers:async()=>s({url:r.CONFIG_UTILS.getApiUrl("/progress/engineers"),method:"GET"}),addTimeLog:async e=>s({url:r.CONFIG_UTILS.getApiUrl("/progress/time-log"),method:"POST",data:e}),addComment:async e=>s({url:r.CONFIG_UTILS.getApiUrl("/progress/comment"),method:"POST",data:e}),uploadAttachment:async(e,t)=>new Promise(((s,I)=>{a.index.uploadFile({url:r.CONFIG_UTILS.getApiUrl(`/progress/attachment/${e}`),filePath:t,name:"file",header:{Authorization:`Bearer ${a.index.getStorageSync("admin_token")}`},success:e=>{try{const t=JSON.parse(e.data);200===t.code?s(t.data):I(new Error(t.message))}catch(t){I(new Error("上传失败"))}},fail:e=>{I(e)}})})),deleteAttachment:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`/progress/attachment/${e}`),method:"DELETE"})},I.client={getList:async(e={})=>s({url:r.CONFIG_UTILS.getApiUrl("/client/list"),method:"GET",data:e}),getDetail:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`/client/detail/${e}`),method:"GET"}),create:async e=>s({url:r.CONFIG_UTILS.getApiUrl("/client/create"),method:"POST",data:e}),update:async(e,t)=>s({url:r.CONFIG_UTILS.getApiUrl(`/client/update/${e}`),method:"POST",data:t}),delete:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`/client/delete/${e}`),method:"DELETE"}),getProjects:async e=>s({url:r.CONFIG_UTILS.getApiUrl(`/client/projects/${e}`),method:"GET"})},exports.ApiErrorHandler=l,exports.ApiService=I;
